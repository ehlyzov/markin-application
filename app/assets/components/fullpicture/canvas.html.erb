<!--
  = require core-selector/core-selector
  = require core-drag-drop/core-drag-drop
  = require fullpicture/dialog
  = require fullpicture/manage
-->

<polymer-element name="fp-canvas-resize" attributes="direction">
  <template>
    <style>
      #control {
        position: absolute;
      }
      #control.horizontal {
        right: 0;
        top: 0;
        height: 100%;
        width: 4px;
        cursor: ew-resize;
      }
    </style>
    <div id="control" class="{{direction}}"></div>
  </template>
  <script>
    Polymer('fp-canvas-resize', {
      direction: 'horizontal',
      // track: function(e) {
      //   this.fire('resize')
      // },
    });
  </script>
</polymer-element>


<polymer-element name="fp-canvas" attributes="source open">
  <template>
    <lib-inputdata id="contentBlocks" source="{{source}}"></lib-inputdata>
    <lib-delegator methods="open close" to="{{$.dialog}}"></lib-delegator>

    <fp-dialog id="dialog">
      <core-selector selected="{{manageState}}">
        <fp-dialog-checkaction name="edit" caption="&#094;"></fp-dialog-checkaction>
        <fp-dialog-checkaction name="resize" caption="&#0112;"></fp-dialog-checkaction>
        <fp-dialog-checkaction name="move" caption="&#0045;"></fp-dialog-checkaction>
        <fp-dialog-checkaction name="add" caption="&#194;"></fp-dialog-checkaction>
        <fp-dialog-checkaction name="delete" caption="&#197;"></fp-dialog-checkaction>
      </core-selector>

      <main class="lib-layout lib-layout-hcenter lib-textFormatted" managed?="{{manageState}}">
        <div class="lib-layout-cell-20 lib-layout">
          <template repeat="{{block in $.contentBlocks.data}}">
            <div class="manageBlockWrap {{block | layoutClasses }}" style="order: {{block.order_number}}">
              <section class="{{block | contentBlockClasses }}">
              <% Rails.configuration.content_blocks_block_styles.each do |style| %>
                <template if="{{block.block_style == '<%= style %>'}}">
                  <fp-contentblock-<%= style %> block="{{block}}"></fp-contentblock-<%= style %>>
                </template>
              <% end %>
              </section>

              <template if="{{manageState == 'move'}}">
                <fp-manage-move block="{{block}}" on-manage-move="{{onSort}}"></fp-manage-move>
              </template>
              <template if="{{manageState == 'edit'}}">
                <fp-canvas-blockResizer block="{{block}}"></fp-canvas-blockResizer>
              </template>
            </div>
          </template>
        </div>
      </main>
    </fp-dialog>
  </template>

  <script>
    Polymer('fp-canvas', {
      layoutClasses: function(block) {
        return [
          "lib-layout-cell-" + block.width,
        ].join(' ')
      },
      contentBlockClasses: function(block) {
        var attrs = ['block', 'image', 'font', 'border', 'background']
        var classes = [
          "lib-contentBlock",
          "lib-layout-cell-" + block.width,
          "lib-layout-row-" + (block.height || 'auto'),
          "lib-layout-cell-vcenter"
        ].concat(
          attrs.filter(
            function(attr){ return !!block[attr + "_style"] }
          ).map(
            function(attr){ return "lib-contentBlock-" + attr + "-" + block[attr + "_style"] }
          )
        )

        if (block.padding)
          classes.push('lib-contentBlock-padding')

        return classes.join(' ')
      },
      onSort: function(event, data){
        var destination = event.target
        var source = data.source
        var position = data.position

        source.block.order_number = destination.block.order_number + ((position == 'before') ? 0 : 1)

        this.$.contentBlocks.data.filter(function(b){
          return b.order_number >= source.block.order_number && b.id != source.block.id
        }).sort(function(a, b) {
          return a.order_number < b.order_number ? -1 : 1
        }).forEach(function(b, i){
          b.order_number = source.block.order_number + i + 1
        })

        this.$.contentBlocks.dataChanged()
      }
    })
  </script>
</polymer-element>

