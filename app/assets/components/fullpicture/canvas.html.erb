<!--
  = require core-selector/core-selector
  = require fullpicture/dialog
  = require fullpicture/contentblocks
  = require fullpicture/blockform
-->

<polymer-element name="fp-canvas" attributes="source open">
  <template>
    <lib-inputdata id="contentBlocks" source="{{source}}"></lib-inputdata>
    <lib-delegator methods="open close" to="{{$.dialog}}"></lib-delegator>
    <fp-blockform id="form"></fp-blockform>

    <fp-dialog id="dialog">
      <core-selector selected="{{manageState}}">
        <fp-dialog-checkaction name="edit" caption="&#094;"></fp-dialog-checkaction>
        <fp-dialog-checkaction name="resize" caption="&#0112;"></fp-dialog-checkaction>
        <fp-dialog-checkaction name="move" caption="&#0045;"></fp-dialog-checkaction>
        <fp-dialog-checkaction name="add" caption="&#194;"></fp-dialog-checkaction>
        <fp-dialog-checkaction name="delete" caption="&#197;"></fp-dialog-checkaction>
      </core-selector>

      <main class="lib-layout lib-layout-hcenter lib-textFormatted" managed?="{{manageState}}">
        <div class="lib-layout-cell-20 lib-layout">
          <template repeat="{{block in $.contentBlocks.data }}">
            <template if="{{ !block._destroy }}">
              <fp-canvas-contentblock block="{{block}}"
                state="{{manageState}}"
                on-block-delete="{{onBlockDelete}}"
                on-block-move="{{onBlockMove}}"
                on-block-edit="{{onBlockEdit}}">
              </fp-canvas-contentblock>
            </template>
          </template>
        </div>
      </main>
    </fp-dialog>
  </template>

  <script>
    Polymer('fp-canvas', {
      onBlockMove: function(event, data){
        var destination = event.target
        var source = data.source
        var position = data.position

        source.block.order_number = destination.block.order_number + ((position == 'before') ? 0 : 1)

        this.$.contentBlocks.data.filter(function(b){
          return b.order_number >= source.block.order_number && b.id != source.block.id
        }).sort(function(a, b) {
          return a.order_number < b.order_number ? -1 : 1
        }).forEach(function(b, i){
          b.order_number = source.block.order_number + i + 1
        })

        this.$.contentBlocks.dataChanged()
      },
      onBlockDelete: function(event){
        event.target.block._destroy = 1
        this.$.contentBlocks.dataChanged()
      },
      onBlockEdit: function(event) {
        window.block = event.target.block
        this.$.form.edit(event.target.block)
      }
    })
  </script>
</polymer-element>
